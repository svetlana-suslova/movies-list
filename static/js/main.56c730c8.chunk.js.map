{"version":3,"sources":["services/movieServiceStubs.js","components/common/Buttons.js","assets/no-movie.png","components/Movie.js","components/common/NoMovie.js","components/common/DropDown.js","components/bars/SortingBar.js","components/bars/FilterBar.js","components/bars/SearchBar.js","components/bars/Paginator.js","components/common/Inputs.js","components/MovieModal.js","components/common/Confirm.js","components/App.js","index.js"],"names":["getMovies","sortBy","genre","searchStr","page","portionNumber","movies","selectGenre","filter","movie","genres","containsString","filterGenres","moviesData","sort","x","y","title","localeCompare","year","runtime","sortMovies","textSearchFields","searchInMovies","activePage","perPage","start","end","slice","getActivePage","portionCount","pagesCount","calculatePagesCount","Math","ceil","calculatePortionCount","pages","i","push","leftPortionPageNumber","rightPortionPageNumber","p","getPages","Promise","resolve","movieItems","obj","toString","toLowerCase","indexOf","length","saveMovie","id","updateMovie","maxId","addMovie","StyledButton","styled","Button","StyledPlusButton","StyledCloseButton","button","AwesomeButton","MyButton","onClickMethod","color","size","onClick","CloseBtn","className","PlusButton","EditButton","DeleteButton","MovieRow","div","MovieImage","MovieInfo","MovieTitle","h3","MovieTitleButton","MovieDetails","MovieActors","MoviePlot","Movie","setMovieToDelete","imgUrl","posterUrl","noMovie","src","alt","join","director","actors","plot","Styled","NoMovie","DropDownToggle","DropdownToggle","DropDownItem","DropdownItem","DropDown","sortMethod","sortOptions","useState","dropdownOpen","setDropdownOpen","Dropdown","group","isOpen","toggle","prevState","caret","DropdownMenu","map","item","key","active","text","Bar","SortingBar","sortingMethod","FilterBar","filterBy","filterMethod","genresOptions","g","SearchInput","Input","SearchBar","search","clearSearch","currentStr","setSearchStr","InputGroup","InputGroupAddon","addonType","type","placeholder","value","onChange","e","currentTarget","onKeyPress","target","charCode","PaginationButton","PaginationLink","Paginator","selectPage","setPortionNumber","Pagination","PaginationItem","previous","next","LabelBold","label","input","TextArea","textarea","TextInput","name","onChangeMovie","defaultValue","register","required","FormGroup","event","ref","TextAreaInput","rows","NumberInput","min","max","parseInt","SelectInput","selectedGenres","go","isMulti","val","options","ErrorMessage","SaveBtn","MovieModal","cancelEditMovie","modal","useForm","handleSubmit","errors","closeBtn","errorMessage","Modal","ModalHeader","close","ModalBody","onSubmit","ModalFooter","Confirm","cancelDeleteMovie","deleteMovie","confirm","AppWrapper","MovieList","App","movieToEdit","movieToDelete","state","setState","useEffect","then","data","loadData","Object","assign","trim","m","field","toastr","success","splice","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56c730c8.chunk.js","sourcesContent":["import moviesData from './db.json';\n\nconst pageSize = 10;\nconst portionSize = 5;\n\nexport function getMovies(sortBy, genre, searchStr, page, portionNumber) {\n     let movies = filterGenres(moviesData.movies, genre);\n     movies = searchInMovies(movies, searchStr);\n     sortMovies(movies, sortBy);\n\n     const activePage = getActivePage(movies, page, pageSize);\n     const portionCount = calculatePortionCount(movies);\n     const pages = getPages(movies, portionNumber);\n\n     return Promise.resolve({\n          portionCount,\n          pages,\n          movieItems: activePage\n     });\n}\n\nfunction sortMovies(movies, sortBy) {\n     if (sortBy === 'title') {\n          movies.sort((x, y) => x.title.localeCompare(y.title));\n     }\n\n     if (sortBy === 'year') {\n          movies.sort((x, y) => x.year - y.year);\n     }\n\n     if (sortBy === 'runtime') {\n          movies.sort((x, y) => x.runtime - y.runtime);\n     }\n}\n\nfunction filterGenres(movies, selectGenre) {\n     if (!selectGenre) return movies;\n     return movies.filter((movie) => {\n          for (const genre of movie.genres) {\n               if (containsString(genre, selectGenre)) return true;\n          }\n          return false;\n     });\n}\n\nfunction searchInMovies(movies, searchStr) {\n     if (!searchStr) return movies;\n\n     const textSearchFields = ['title', 'year', 'actors', 'director', 'plot'];\n     return movies.filter((movie) => {\n          for (const field of textSearchFields) {\n               if (containsString(movie[field], searchStr)) return true;\n          }\n          return false;\n     });\n}\n\nfunction containsString(obj, searchStr) {\n     return (\n          obj.toString().toLowerCase().indexOf(searchStr.toLowerCase()) !== -1\n     );\n}\n\nexport function getGenres() {\n     return Promise.resolve(moviesData.genres);\n}\n\nfunction getActivePage(movies, page, perPage) {\n     const start = (page - 1) * perPage;\n     const end = page * perPage;\n     return movies.slice(start, end);\n}\n\nfunction calculatePortionCount(movies) {\n     const pagesCount = calculatePagesCount(movies);\n     const portionCount = Math.ceil(pagesCount / portionSize);\n     return portionCount;\n}\n\nfunction getPages(movies, portionNumber) {\n     const pagesCount = calculatePagesCount(movies);\n     let pages = [];\n     for (let i = 1; i <= pagesCount; i++) {\n          pages.push(i);\n     }\n     const leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n     const rightPortionPageNumber = portionNumber * portionSize;\n     pages = pages.filter(\n          (p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber\n     );\n\n     return pages;\n}\n\nfunction calculatePagesCount(movies) {\n     return Math.ceil(movies.length / pageSize);\n}\n\nexport function saveMovie(movie) {\n     if (movie.id) return updateMovie(movie);\n     return addMovie(movie);\n}\n\nfunction addMovie(movie) {\n     const movies = moviesData.movies;\n     let maxId = 0;\n     for (let i = 0; i < movies.length; i++) {\n          if (movies[i].id > maxId) {\n               maxId = movies[i].id;\n          }\n     }\n     movie.id = maxId + 1;\n     movies.push(movie);\n\n     return Promise.resolve(null);\n}\n\nfunction updateMovie(movie) {\n     const movies = moviesData.movies;\n     for (let i = 0; i < movies.length; i++) {\n          if (movies[i].id === movie.id) {\n               movies[i] = movie;\n          }\n     }\n     return Promise.resolve(null);\n}\n\nexport function deleteMovie(id) {\n     const movies = moviesData.movies;\n     for (let i = 0; i < movies.length; i++) {\n          if (movies[i].id === id) {\n               movies.splice(i, 1);\n          }\n     }\n     return Promise.resolve(null);\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Button } from 'reactstrap';\n\nconst StyledButton = styled(Button)`\n     &:focus {\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0) !important;\n     }\n`;\n\nconst StyledPlusButton = styled(Button)`\n     font-weight: bold;\n     line-height: 18px;\n     font-size: 20px;\n     &:focus {\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0) !important;\n     }\n`;\n\nconst StyledCloseButton = styled.button`\n     &:focus {\n          outline: none;\n     }\n`;\n\nconst AwesomeButton = styled.button`\n     border: 1px solid #ced4da;\n     background: #fff;\n     color: #333;\n     border-radius: 4px;\n     padding: 6px 8px;\n     margin: 5px;\n     &:focus {\n          outline: none;\n     }\n     .fa {\n          font-size: 18px;\n     }\n     .fa-trash {\n          padding: 0 2px;\n     }\n`;\n\nexport const MyButton = ({ title, onClickMethod, color, size }) => {\n     return (\n          <StyledButton\n               size={size}\n               color={color}\n               onClick={() => onClickMethod()}\n          >\n               {title}\n          </StyledButton>\n     );\n};\n\nexport const CloseBtn = ({ onClickMethod }) => {\n     return (\n          <StyledCloseButton className=\"close\" onClick={onClickMethod}>\n               &times;\n          </StyledCloseButton>\n     );\n};\n\nexport const PlusButton = ({ title, onClickMethod, color, size }) => {\n     return (\n          <div>\n               <StyledPlusButton\n                    size={size}\n                    color={color}\n                    onClick={() => onClickMethod()}\n               >\n                    {title}\n               </StyledPlusButton>\n          </div>\n     );\n};\n\nexport const EditButton = ({ onClickMethod }) => {\n     return (\n          <AwesomeButton onClick={() => onClickMethod()}>\n               <i className=\"fa fa-edit\"></i>\n          </AwesomeButton>\n     );\n};\n\nexport const DeleteButton = ({ onClickMethod }) => {\n     return (\n          <AwesomeButton onClick={() => onClickMethod()}>\n               <i className=\"fa fa-trash\"></i>\n          </AwesomeButton>\n     );\n};\n","export default __webpack_public_path__ + \"static/media/no-movie.5ed52dd9.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport { EditButton, DeleteButton } from './common/Buttons';\nimport noMovie from '../assets/no-movie.png';\n\nconst MovieRow = styled.div`\n     font-size: 15px;\n     border-bottom: 1px dotted #cacaca;\n     clear: both;\n     margin: 10px 0;\n`;\nconst MovieImage = styled.div`\n     float: left;\n     position: relative;\n     margin: 0 10px 0 0;\n     background-color: #eee;\n     border: 1px solid rgba(0, 0, 0, 0.1);\n     width: 96px;\n     height: 142px;\n     img {\n          width: 96px;\n          height: 142px;\n     }\n`;\nconst MovieInfo = styled.div`\n     font-size: 12px;\n     text-align: left;\n     font-family: Verdana, Arial, sans-serif;\n     color: #333;\n     p span::before {\n          content: ' | ';\n          color: #ddd;\n     }\n`;\nconst MovieTitle = styled.h3`\n     font-size: 17px;\n     margin: 10px 0 0 0;\n     color: #337ab7;\n     button {\n          cursor: pointer;\n     }\n`;\n\nconst MovieTitleButton = styled.button`\n     font-size: 17px;\n     cursor: pointer;\n     color: #007bff;\n     text-decoration: none;\n     background-color: transparent;\n     border: none;\n     :hover {\n          text-decoration: underline;\n     }\n     :active,\n     :focus {\n          outline: none;\n     }\n`;\n\nconst MovieDetails = styled.p``;\n\nconst MovieActors = styled.p`\n     margin-top: 8px;\n     color: #337ab7;\n`;\nconst MoviePlot = styled.p`\n     position: relative;\n     line-height: 1.4em;\n     min-height: 3.2em;\n     text-align: justify;\n     font-size: 14px;\n`;\n\nconst Movie = ({ movie, updateMovie, setMovieToDelete }) => {\n     const imgUrl = movie.posterUrl ? movie.posterUrl : noMovie;\n     return (\n          <MovieRow key={movie.id}>\n               <MovieImage>\n                    <img src={imgUrl} title={movie.title} alt={movie.title} />\n               </MovieImage>\n               <MovieInfo>\n                    <MovieTitle className=\"row justify-content-around\">\n                         <div className=\"col-10\">\n                              <MovieTitleButton\n                                   onClick={() => updateMovie(movie)}\n                              >\n                                   {movie.title}\n                              </MovieTitleButton>\n                         </div>\n                         <div className=\"col-2\">\n                              <EditButton\n                                   onClickMethod={() => updateMovie(movie)}\n                              />\n                              <DeleteButton\n                                   onClickMethod={() => setMovieToDelete(movie)}\n                              />\n                         </div>\n                    </MovieTitle>\n                    <MovieDetails>\n                         {movie.year}\n                         <span>{movie.runtime + ' min.'}</span>\n                         <span>{movie.genres.join(', ')}</span>\n                    </MovieDetails>\n                    <MovieActors>\n                         {movie.director}\n                         <span>{movie.actors}</span>\n                    </MovieActors>\n                    <MoviePlot>{movie.plot}</MoviePlot>\n               </MovieInfo>\n          </MovieRow>\n     );\n};\n\nexport default Movie;\n","import noMovie from '../../assets/no-movie.png';\nimport styled from 'styled-components';\n\nconst Styled = styled.div`\n     font-size: 18px;\n     color: red;\n     margin: 10px 0;\n     text-align: center;\n     img {\n          width: 200px;\n          height: auto;\n          border: 1px solid rgba(0, 0, 0, 0.1);\n     }\n`;\n\nconst NoMovie = () => {\n     return (\n          <div className=\"row justify-content-center\">\n               <Styled className=\"flex-column\">\n                    <img src={noMovie} alt=\"No movie\" />\n                    <div>No movies</div>\n               </Styled>\n          </div>\n     );\n};\nexport default NoMovie;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport {\n     Dropdown,\n     DropdownToggle,\n     DropdownMenu,\n     DropdownItem\n} from 'reactstrap';\n\nconst DropDownToggle = styled(DropdownToggle)`\n     &:focus {\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0) !important;\n     }\n`;\nconst DropDownItem = styled(DropdownItem)`\n     &:focus {\n          background-color: rgba(237, 241, 245, 0.8);\n          color: #404040;\n          outline: none;\n     }\n`;\n\nconst DropDown = ({ sortMethod, sort, sortOptions, title, color }) => {\n     const [dropdownOpen, setDropdownOpen] = useState(false);\n     const toggle = () => setDropdownOpen((prevState) => !prevState);\n\n     return (\n          <div>\n               <Dropdown group isOpen={dropdownOpen} size=\"sm\" toggle={toggle}>\n                    <DropDownToggle caret color={color}>\n                         {title}\n                    </DropDownToggle>\n                    <DropdownMenu>\n                         {sortOptions.map((item) => {\n                              return (\n                                   <DropDownItem\n                                        key={item.key}\n                                        onClick={() => sort(item.key)}\n                                        active={sortMethod === item.key}\n                                   >\n                                        {item.text}\n                                   </DropDownItem>\n                              );\n                         })}\n                    </DropdownMenu>\n               </Dropdown>\n          </div>\n     );\n};\nexport default DropDown;\n","import React from 'react';\nimport DropDown from '../common/DropDown';\nimport styled from 'styled-components';\n\nconst Bar = styled.div`\n     margin-bottom: 20px;\n`;\n\nconst SortingBar = ({ sortingMethod, sortBy }) => {\n     const sortByOptions = [\n          { key: 'title', text: 'Title' },\n          { key: 'year', text: 'Year' },\n          { key: 'runtime', text: 'Movie runtime' }\n     ];\n\n     return (\n          <Bar>\n               <DropDown\n                    sortMethod={sortingMethod}\n                    sortOptions={sortByOptions}\n                    sort={sortBy}\n                    title=\"Sort by\"\n                    color=\"secondary\"\n               />\n          </Bar>\n     );\n};\nexport default SortingBar;\n","import React from 'react';\nimport DropDown from '../common/DropDown';\n\nconst FilterBar = ({ genres, filterBy, filterMethod }) => {\n     const genresOptions = genres.map((g) => ({\n          key: g,\n          text: g\n     }));\n\n     return (\n          <div>\n               <DropDown\n                    sortMethod={filterMethod}\n                    sortOptions={genresOptions}\n                    sort={filterBy}\n                    title=\"Filter by Genre\"\n                    color=\"primary\"\n               />\n          </div>\n     );\n};\nexport default FilterBar;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { InputGroup, InputGroupAddon, Input } from 'reactstrap';\nimport { MyButton } from '../common/Buttons';\n\nconst Bar = styled.div`\n     margin-bottom: 10px;\n     width: 220px !important;\n`;\n\nconst SearchInput = styled(Input)`\n     &:focus {\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0) !important;\n     }\n`;\n\nconst SearchBar = ({ search, clearSearch }) => {\n     const [currentStr, setSearchStr] = useState('');\n     const onSearchChange = (e) => {\n          setSearchStr(e.currentTarget.value);\n     };\n     const onClearSearch = () => {\n          clearSearch();\n          setSearchStr('');\n     };\n\n     return (\n          <Bar>\n               <InputGroup size=\"sm\">\n                    <InputGroupAddon addonType=\"prepend\">\n                         <MyButton\n                              color=\"success\"\n                              onClickMethod={() => onClearSearch()}\n                              title=\"Clear\"\n                         />\n                    </InputGroupAddon>\n                    <SearchInput\n                         type=\"text\"\n                         placeholder=\"Search\"\n                         value={currentStr}\n                         onChange={onSearchChange}\n                         onKeyPress={(target) => {\n                              if (target.charCode === 13) {\n                                   search(currentStr);\n                              }\n                         }}\n                    />\n                    <InputGroupAddon addonType=\"append\">\n                         <MyButton\n                              color=\"primary\"\n                              onClickMethod={() => search(currentStr)}\n                              title=\"Search\"\n                         />\n                    </InputGroupAddon>\n               </InputGroup>\n          </Bar>\n     );\n};\nexport default SearchBar;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Pagination, PaginationItem, PaginationLink } from 'reactstrap';\n\nconst Bar = styled.div`\n     margin-bottom: 10px;\n`;\n\nconst PaginationButton = styled(PaginationLink)`\n     &:focus {\n          box-shadow: 0 0 0 0 rgba(0, 123, 255, 0) !important;\n     }\n`;\n\nconst Paginator = ({\n     selectPage,\n     activePage,\n     pages,\n     portionCount,\n     portionNumber,\n     setPortionNumber\n}) => {\n     return (\n          <Bar>\n               <Pagination size=\"sm\">\n                    {portionNumber > 1 && (\n                         <PaginationItem>\n                              <PaginationButton\n                                   previous\n                                   onClick={() => {\n                                        setPortionNumber(portionNumber - 1);\n                                   }}\n                              />\n                         </PaginationItem>\n                    )}\n                    {pages.length > 1\n                         ? pages.map((p) => {\n                                return (\n                                     <PaginationItem\n                                          active={p === activePage}\n                                          key={p}\n                                     >\n                                          <PaginationButton\n                                               onClick={() => selectPage(p)}\n                                          >\n                                               {p}\n                                          </PaginationButton>\n                                     </PaginationItem>\n                                );\n                           })\n                         : null}\n                    {portionCount > portionNumber && (\n                         <PaginationItem>\n                              <PaginationButton\n                                   next\n                                   onClick={() => {\n                                        setPortionNumber(portionNumber + 1);\n                                   }}\n                              />\n                         </PaginationItem>\n                    )}\n               </Pagination>\n          </Bar>\n     );\n};\nexport default Paginator;\n","import React from 'react';\nimport { FormGroup } from 'reactstrap';\nimport styled from 'styled-components';\nimport Select from 'react-select';\n\nconst LabelBold = styled.label`\n     font-weight: 700;\n`;\n\nconst Input = styled.input`\n     display: block;\n     width: 100%;\n     height: calc(1.5em + 0.75rem + 2px);\n     border-radius: 4px;\n     border: 1px solid #ced4da;\n     font-size: 1rem;\n     font-weight: 400;\n     line-height: 1.5;\n     color: #495057;\n     padding: 0.375rem 0.75rem;\n     transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n     margin-bottom: 15px;\n`;\n\nconst TextArea = styled.textarea`\n     display: block;\n     width: 100%;\n     border-radius: 4px;\n     border: 1px solid #ced4da;\n     font-size: 1rem;\n     font-weight: 400;\n     line-height: 1.5;\n     color: #495057;\n     padding: 0.375rem 0.75rem;\n     transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n     margin-bottom: 15px;\n`;\n\nexport const TextInput = ({\n     name,\n     placeholder,\n     label,\n     onChangeMovie,\n     defaultValue,\n     register,\n     required\n}) => {\n     const inputOnChange = (event) => {\n          onChangeMovie(event.target.name, event.target.value);\n     };\n     return (\n          <FormGroup>\n               <LabelBold>{label}</LabelBold>\n               <Input\n                    type=\"text\"\n                    name={name}\n                    placeholder={placeholder}\n                    onChange={inputOnChange}\n                    defaultValue={defaultValue}\n                    ref={register({ required })}\n               />\n          </FormGroup>\n     );\n};\n\nexport const TextAreaInput = ({\n     name,\n     placeholder,\n     label,\n     onChangeMovie,\n     defaultValue,\n     register,\n     rows,\n     required\n}) => {\n     const inputOnChange = (event) => {\n          onChangeMovie(event.target.name, event.target.value);\n     };\n     return (\n          <FormGroup>\n               <LabelBold>{label}</LabelBold>\n               <TextArea\n                    name={name}\n                    rows={rows}\n                    placeholder={placeholder}\n                    onChange={inputOnChange}\n                    defaultValue={defaultValue}\n                    ref={register({ required })}\n               />\n          </FormGroup>\n     );\n};\n\nexport const NumberInput = ({\n     name,\n     placeholder,\n     label,\n     onChangeMovie,\n     min,\n     max,\n     defaultValue,\n     register,\n     required\n}) => {\n     const inputOnChange = (event) => {\n          const value = parseInt(event.target.value, 10);\n          onChangeMovie(event.target.name, value);\n     };\n     return (\n          <FormGroup>\n               <LabelBold>{label}</LabelBold>\n               <Input\n                    type=\"number\"\n                    name={name}\n                    placeholder={placeholder}\n                    min={min}\n                    max={max}\n                    onChange={inputOnChange}\n                    defaultValue={defaultValue}\n                    ref={register({ required })}\n               />\n          </FormGroup>\n     );\n};\n\nexport const SelectInput = ({\n     name,\n     label,\n     onChangeMovie,\n     movie,\n     genres,\n     placeholder\n}) => {\n     const genresOptions = genres\n          .filter((g) => g !== 'ALL')\n          .map((g) => ({ value: g, label: g }));\n     const selectedGenres = genresOptions.filter((go) => {\n          if (!movie) return false;\n          return movie.genres.indexOf(go.value) >= 0;\n     });\n\n     const inputOnChange = (val) => {\n          const value = !val ? [''] : val.map((item) => item.value);\n          onChangeMovie(name, value);\n     };\n\n     return (\n          <FormGroup>\n               <LabelBold>{label}</LabelBold>\n               <Select\n                    isMulti\n                    name={name}\n                    placeholder={placeholder}\n                    onChange={inputOnChange}\n                    options={genresOptions}\n                    defaultValue={selectedGenres}\n               />\n          </FormGroup>\n     );\n};\n","import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { MyButton, CloseBtn } from './common/Buttons';\nimport {\n     TextInput,\n     TextAreaInput,\n     NumberInput,\n     SelectInput\n} from './common/Inputs';\nimport { useForm } from 'react-hook-form';\nimport styled from 'styled-components';\n\nconst ErrorMessage = styled.p`\n     color: #bf1650;\n     ::before {\n          display: inline;\n          content: '⚠ ';\n     }\n`;\n\nconst SaveBtn = styled.button`\n     color: #fff;\n     background-color: #007bff;\n     height: 31px;\n     padding: 5px 12px;\n     font-size: 14px;\n     line-height: 1.42857143;\n     background-image: none;\n     border: 1px solid #007bff;\n     border-radius: 4px;\n     margin: 5px 0;\n     &:hover {\n          background-color: #0069d9;\n     }\n     &:focus {\n          outline: none;\n     }\n`;\n\nconst MovieModal = ({\n     cancelEditMovie,\n     onChangeMovie,\n     movie,\n     saveMovie,\n     genres,\n     modal\n}) => {\n     const { register, handleSubmit, errors } = useForm();\n     const onSubmit = () => saveMovie();\n\n     const closeBtn = <CloseBtn onClickMethod={cancelEditMovie} />;\n     const errorMessage = 'This field is required.';\n\n     return (\n          <div>\n               {movie ? (\n                    <Modal isOpen={modal}>\n                         <ModalHeader close={closeBtn}>Edit movie</ModalHeader>\n                         <ModalBody>\n                              <form onSubmit={handleSubmit(onSubmit)}>\n                                   <TextInput\n                                        name=\"title\"\n                                        label=\"Title\"\n                                        placeholder=\"Title\"\n                                        register={register}\n                                        required\n                                        onChangeMovie={onChangeMovie}\n                                        defaultValue={movie.title}\n                                   />\n                                   {errors.title && (\n                                        <ErrorMessage>\n                                             {errorMessage}\n                                        </ErrorMessage>\n                                   )}\n                                   <SelectInput\n                                        name=\"genres\"\n                                        label=\"Genres\"\n                                        placeholder=\"Genres\"\n                                        genres={genres}\n                                        movie={movie}\n                                        onChangeMovie={onChangeMovie}\n                                   />\n                                   <NumberInput\n                                        name=\"year\"\n                                        label=\"Year\"\n                                        placeholder=\"2020\"\n                                        onChangeMovie={onChangeMovie}\n                                        min=\"1950\"\n                                        max=\"2050\"\n                                        defaultValue={movie.year}\n                                        register={register}\n                                        required\n                                   />\n                                   {errors.year && (\n                                        <ErrorMessage>\n                                             {errorMessage}\n                                        </ErrorMessage>\n                                   )}\n                                   <NumberInput\n                                        name=\"runtime\"\n                                        label=\"Runtime\"\n                                        placeholder=\"120\"\n                                        onChangeMovie={onChangeMovie}\n                                        min=\"1\"\n                                        max=\"180\"\n                                        defaultValue={movie.runtime}\n                                        register={register}\n                                        required\n                                   />\n                                   {errors.runtime && (\n                                        <ErrorMessage>\n                                             {errorMessage}\n                                        </ErrorMessage>\n                                   )}\n                                   <TextInput\n                                        name=\"posterUrl\"\n                                        label=\"Image\"\n                                        placeholder=\"Image URL\"\n                                        onChangeMovie={onChangeMovie}\n                                        defaultValue={movie.posterUrl}\n                                        register={register}\n                                   />\n                                   <TextInput\n                                        name=\"director\"\n                                        label=\"Director\"\n                                        placeholder=\"Director\"\n                                        onChangeMovie={onChangeMovie}\n                                        defaultValue={movie.director}\n                                        register={register}\n                                        required\n                                   />\n                                   {errors.director && (\n                                        <ErrorMessage>\n                                             {errorMessage}\n                                        </ErrorMessage>\n                                   )}\n                                   <TextAreaInput\n                                        name=\"actors\"\n                                        rows=\"2\"\n                                        label=\"Actors\"\n                                        onChangeMovie={onChangeMovie}\n                                        placeholder=\"Actor, Actor, ...\"\n                                        defaultValue={movie.actors}\n                                        register={register}\n                                        required\n                                   />\n                                   {errors.actors && (\n                                        <ErrorMessage>\n                                             {errorMessage}\n                                        </ErrorMessage>\n                                   )}\n                                   <TextAreaInput\n                                        name=\"plot\"\n                                        rows=\"4\"\n                                        label=\"Plot\"\n                                        onChangeMovie={onChangeMovie}\n                                        placeholder=\"Plot\"\n                                        defaultValue={movie.plot}\n                                        register={register}\n                                   />\n                                   <ModalFooter>\n                                        <SaveBtn type=\"submit\">Save</SaveBtn>\n                                        <MyButton\n                                             size=\"sm\"\n                                             color=\"secondary\"\n                                             title=\"Cancel\"\n                                             onClickMethod={cancelEditMovie}\n                                        />\n                                   </ModalFooter>\n                              </form>\n                         </ModalBody>\n                    </Modal>\n               ) : null}\n          </div>\n     );\n};\nexport default MovieModal;\n","import React from 'react';\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { MyButton, CloseBtn } from './Buttons';\n\nconst Confirm = ({ cancelDeleteMovie, deleteMovie, movie, confirm }) => {\n     const closeBtn = <CloseBtn onClickMethod={cancelDeleteMovie} />;\n\n     return (\n          <div>\n               {movie ? (\n                    <Modal isOpen={confirm}>\n                         <ModalHeader close={closeBtn}>\n                              Are you sure?\n                         </ModalHeader>\n                         <ModalBody>\n                              <div>{`'${movie.title}' will be deleted from the list.`}</div>\n                         </ModalBody>\n                         <ModalFooter>\n                              <MyButton\n                                   size=\"sm\"\n                                   color=\"danger\"\n                                   title=\"Delete\"\n                                   onClickMethod={deleteMovie}\n                              />\n                              <MyButton\n                                   size=\"sm\"\n                                   color=\"secondary\"\n                                   title=\"Cancel\"\n                                   onClickMethod={cancelDeleteMovie}\n                              />\n                         </ModalFooter>\n                    </Modal>\n               ) : null}\n          </div>\n     );\n};\nexport default Confirm;\n","import React, { useState, useEffect } from 'react';\nimport {\n     getMovies,\n     getGenres,\n     saveMovie,\n     deleteMovie\n} from '../services/movieServiceStubs';\nimport Movie from './Movie';\nimport NoMovie from './common/NoMovie';\nimport SortingBar from './bars/SortingBar';\nimport FilterBar from './bars/FilterBar';\nimport SearchBar from './bars/SearchBar';\nimport Paginator from './bars/Paginator';\nimport styled from 'styled-components';\nimport MovieModal from './MovieModal';\nimport { PlusButton } from './common/Buttons';\nimport Confirm from './common/Confirm';\nimport toastr from 'toastr';\n\nconst AppWrapper = styled.div`\n     padding: 5px;\n     margin-top: 20px;\n`;\n\nconst MovieList = styled.div`\n     padding-top: 10px;\n     margin-top: 20px;\n     background-color: #f8f8f8;\n`;\nconst App = () => {\n     const [state, setState] = useState({\n          movies: [],\n          genres: [],\n          pages: [],\n          sortingMethod: 'title',\n          filterMethod: '',\n          searchStr: '',\n          activePage: 1,\n          portionCount: null,\n          portionNumber: 1,\n          movieToEdit: null,\n          movieToDelete: null,\n          modal: false,\n          confirm: false\n     });\n\n     const {\n          movies,\n          genres,\n          pages,\n          sortingMethod,\n          filterMethod,\n          searchStr,\n          activePage,\n          portionCount,\n          portionNumber,\n          movieToEdit,\n          movieToDelete,\n          modal,\n          confirm\n     } = state;\n\n     useEffect(() => {\n          const loadData = () => {\n               getMovies(\n                    sortingMethod,\n                    filterMethod,\n                    searchStr,\n                    activePage,\n                    portionNumber\n               ).then((data) => {\n                    setState((state) => ({\n                         ...state,\n                         movies: data.movieItems,\n                         pages: data.pages,\n                         portionCount: data.portionCount\n                    }));\n               });\n          };\n          getGenres().then((genres) => {\n               setState((state) => ({\n                    ...state,\n                    genres\n               }));\n          });\n          loadData();\n     }, [sortingMethod, filterMethod, searchStr, activePage, portionNumber]);\n\n     const loadData = () => {\n          getMovies(\n               sortingMethod,\n               filterMethod,\n               searchStr,\n               activePage,\n               portionNumber\n          ).then((data) => {\n               setState((state) => ({\n                    ...state,\n                    movies: data.movieItems,\n                    pages: data.pages,\n                    portionCount: data.portionCount\n               }));\n          });\n     };\n\n     const sortBy = (key) => {\n          setState((state) => ({\n               ...state,\n               sortingMethod: key,\n               activePage: 1,\n               portionNumber: 1\n          }));\n     };\n\n     const filterBy = (key) => {\n          if (key !== 'ALL') {\n               setState((state) => ({\n                    ...state,\n                    filterMethod: key,\n                    activePage: 1,\n                    portionNumber: 1\n               }));\n          } else {\n               setState((state) => ({\n                    ...state,\n                    filterMethod: '',\n                    activePage: 1,\n                    portionNumber: 1\n               }));\n          }\n     };\n\n     const search = (key) => {\n          if (!(key.trim() === '')) {\n               setState((state) => ({\n                    ...state,\n                    searchStr: key,\n                    activePage: 1,\n                    portionNumber: 1\n               }));\n          }\n     };\n\n     const clearSearch = () => {\n          setState((state) => ({\n               ...state,\n               searchStr: '',\n               activePage: 1,\n               portionNumber: 1\n          }));\n     };\n\n     const selectPage = (key) => {\n          setState((state) => ({\n               ...state,\n               activePage: key\n          }));\n     };\n\n     const setPortionNumber = (key) => {\n          setState((state) => ({\n               ...state,\n               portionNumber: key\n          }));\n     };\n\n     const createNewMovie = () => {\n          setState((state) => ({\n               ...state,\n               movieToEdit: {\n                    title: '',\n                    year: 2021,\n                    runtime: 120,\n                    genres: [],\n                    director: '',\n                    actors: '',\n                    plot: '',\n                    posterUrl:\n                         'https://images5.fanpop.com/image/photos/24600000/The-Mask-the-mask-24621712-336-475.jpg'\n               },\n               modal: !modal\n          }));\n     };\n\n     const cancelEditMovie = () => {\n          setState((state) => ({\n               ...state,\n               movieToEdit: null,\n               modal: !modal\n          }));\n     };\n\n     const updateMovieToEditOnChange = (field, value) => {\n          let movie = movieToEdit;\n          movie[field] = value;\n          return setState((state) => ({\n               ...state,\n               movieToEdit: movie\n          }));\n     };\n\n     const onSaveMovie = () => {\n          const movie = movieToEdit;\n          setState((state) => ({\n               ...state,\n               movieToEdit: null,\n               modal: !modal\n          }));\n          saveMovie(movie).then(() => {\n               toastr.success('Movie was saved!');\n               loadData();\n          });\n     };\n\n     const updateMovie = (movie) => {\n          setState((state) => ({\n               ...state,\n               movieToEdit: Object.assign({}, movie),\n               modal: !modal\n          }));\n     };\n\n     const setMovieToDelete = (key) => {\n          setState((state) => ({\n               ...state,\n               movieToDelete: key,\n               confirm: !confirm\n          }));\n     };\n\n     const cancelDeleteMovie = () => {\n          setState((state) => ({\n               ...state,\n               movieToDelete: null,\n               confirm: !confirm\n          }));\n     };\n\n     const onDeleteMovie = () => {\n          deleteMovie(movieToDelete.id).then(() => {\n               toastr.error('Movie was deleted!');\n               setState((state) => ({\n                    ...state,\n                    movieToDelete: null,\n                    confirm: !confirm\n               }));\n               loadData();\n          });\n     };\n\n     return (\n          <AppWrapper>\n               {movies ? (\n                    <>\n                         <div className=\"container\">\n                              <div className=\"row justify-content-between\">\n                                   <SortingBar\n                                        className=\"col-2\"\n                                        sortingMethod={sortingMethod}\n                                        sortBy={sortBy}\n                                   />\n                                   <Paginator\n                                        className=\"col-10\"\n                                        activePage={activePage}\n                                        portionCount={portionCount}\n                                        selectPage={selectPage}\n                                        pages={pages}\n                                        portionNumber={portionNumber}\n                                        setPortionNumber={setPortionNumber}\n                                   />\n                              </div>\n                              <div className=\"row justify-content-between\">\n                                   <SearchBar\n                                        className=\"col-6\"\n                                        search={search}\n                                        clearSearch={clearSearch}\n                                   />\n                                   <FilterBar\n                                        className=\"col-4\"\n                                        genres={genres}\n                                        filterMethod={filterMethod}\n                                        filterBy={filterBy}\n                                   />\n                                   <PlusButton\n                                        className=\"col-2\"\n                                        color=\"success\"\n                                        onClickMethod={createNewMovie}\n                                        title=\"+\"\n                                   />\n                              </div>\n                         </div>\n                         {movies.length !== 0 ? (\n                              <MovieList className=\"container\">\n                                   {movies.map((m) => (\n                                        <Movie\n                                             key={m.id}\n                                             movie={m}\n                                             updateMovie={updateMovie}\n                                             setMovieToDelete={setMovieToDelete}\n                                        />\n                                   ))}\n                              </MovieList>\n                         ) : (\n                              <NoMovie />\n                         )}\n                         <MovieModal\n                              modal={modal}\n                              movie={movieToEdit}\n                              cancelEditMovie={cancelEditMovie}\n                              onChangeMovie={updateMovieToEditOnChange}\n                              saveMovie={onSaveMovie}\n                              genres={genres}\n                         />\n                         <Confirm\n                              confirm={confirm}\n                              cancelDeleteMovie={cancelDeleteMovie}\n                              deleteMovie={onDeleteMovie}\n                              movie={movieToDelete}\n                         />\n                    </>\n               ) : (\n                    <NoMovie />\n               )}\n          </AppWrapper>\n     );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'toastr/build/toastr.css';\nimport App from './components/App';\n\nReactDOM.render(\n     <React.StrictMode>\n          <App />\n     </React.StrictMode>,\n     document.getElementById('root')\n);\n"],"sourceRoot":""}