[{"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/index.js":"1","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/App.js":"2","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/Movie.js":"3","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/services/movieServiceStubs.js":"4","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/NoMovie.js":"5","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/Buttons.js":"6","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/DropDown.js":"7","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/bars/SortingBar.js":"8","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/bars/FilterBar.js":"9","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/bars/SearchBar.js":"10","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/bars/Paginator.js":"11","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/MovieModal.js":"12","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/Inputs.js":"13","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/Confirm.js":"14"},{"size":300,"mtime":1611780757887,"results":"15","hashOfConfig":"16"},{"size":9724,"mtime":1611780486787,"results":"17","hashOfConfig":"16"},{"size":2769,"mtime":1611780502139,"results":"18","hashOfConfig":"16"},{"size":3634,"mtime":1611780515742,"results":"19","hashOfConfig":"16"},{"size":636,"mtime":1611780480644,"results":"20","hashOfConfig":"16"},{"size":2100,"mtime":1611780448587,"results":"21","hashOfConfig":"16"},{"size":1631,"mtime":1611780457220,"results":"22","hashOfConfig":"16"},{"size":722,"mtime":1611780438891,"results":"23","hashOfConfig":"16"},{"size":563,"mtime":1611780402991,"results":"24","hashOfConfig":"16"},{"size":1943,"mtime":1611780426589,"results":"25","hashOfConfig":"16"},{"size":2297,"mtime":1611780423314,"results":"26","hashOfConfig":"16"},{"size":7696,"mtime":1611780506664,"results":"27","hashOfConfig":"16"},{"size":4062,"mtime":1611780462713,"results":"28","hashOfConfig":"16"},{"size":1459,"mtime":1611780451904,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pepj88",{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/index.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/App.js",["61"],"import React, { useState, useEffect } from 'react';\nimport {\n     getMovies,\n     getGenres,\n     saveMovie,\n     deleteMovie\n} from '../services/movieServiceStubs';\nimport Movie from './Movie';\nimport NoMovie from './common/NoMovie';\nimport SortingBar from './bars/SortingBar';\nimport FilterBar from './bars/FilterBar';\nimport SearchBar from './bars/SearchBar';\nimport Paginator from './bars/Paginator';\nimport styled from 'styled-components';\nimport MovieModal from './MovieModal';\nimport { PlusButton } from './common/Buttons';\nimport Confirm from './common/Confirm';\nimport toastr from 'toastr';\n\nconst AppWrapper = styled.div`\n     padding: 5px;\n     margin-top: 20px;\n`;\n\nconst MovieList = styled.div`\n     padding-top: 10px;\n     margin-top: 20px;\n     background-color: #f8f8f8;\n`;\nconst App = () => {\n     const [state, setState] = useState({\n          movies: [],\n          genres: [],\n          pages: [],\n          sortingMethod: 'title',\n          filterMethod: '',\n          searchStr: '',\n          activePage: 1,\n          portionCount: null,\n          portionNumber: 1,\n          movieToEdit: null,\n          movieToDelete: null,\n          modal: false,\n          confirm: false\n     });\n\n     const {\n          movies,\n          genres,\n          pages,\n          sortingMethod,\n          filterMethod,\n          searchStr,\n          activePage,\n          portionCount,\n          portionNumber,\n          movieToEdit,\n          movieToDelete,\n          modal,\n          confirm\n     } = state;\n\n     useEffect(() => {\n          getGenres().then((genres) => {\n               setState((state) => ({\n                    ...state,\n                    genres\n               }));\n          });\n          loadData();\n     }, [sortingMethod, filterMethod, searchStr, activePage, portionNumber]);\n\n     const loadData = () => {\n          getMovies(\n               sortingMethod,\n               filterMethod,\n               searchStr,\n               activePage,\n               portionNumber\n          ).then((data) => {\n               setState((state) => ({\n                    ...state,\n                    movies: data.movieItems,\n                    pages: data.pages,\n                    portionCount: data.portionCount\n               }));\n          });\n     };\n\n     const sortBy = (key) => {\n          setState((state) => ({\n               ...state,\n               sortingMethod: key,\n               activePage: 1,\n               portionNumber: 1\n          }));\n     };\n\n     const filterBy = (key) => {\n          if (key !== 'ALL') {\n               setState((state) => ({\n                    ...state,\n                    filterMethod: key,\n                    activePage: 1,\n                    portionNumber: 1\n               }));\n          } else {\n               setState((state) => ({\n                    ...state,\n                    filterMethod: '',\n                    activePage: 1,\n                    portionNumber: 1\n               }));\n          }\n     };\n\n     const search = (key) => {\n          if (!(key.trim() === '')) {\n               setState((state) => ({\n                    ...state,\n                    searchStr: key,\n                    activePage: 1,\n                    portionNumber: 1\n               }));\n          }\n     };\n\n     const clearSearch = () => {\n          setState((state) => ({\n               ...state,\n               searchStr: '',\n               activePage: 1,\n               portionNumber: 1\n          }));\n     };\n\n     const selectPage = (key) => {\n          setState((state) => ({\n               ...state,\n               activePage: key\n          }));\n     };\n\n     const setPortionNumber = (key) => {\n          setState((state) => ({\n               ...state,\n               portionNumber: key\n          }));\n     };\n\n     const createNewMovie = () => {\n          setState((state) => ({\n               ...state,\n               movieToEdit: {\n                    title: '',\n                    year: 2021,\n                    runtime: 120,\n                    genres: [],\n                    director: '',\n                    actors: '',\n                    plot: '',\n                    posterUrl:\n                         'https://images5.fanpop.com/image/photos/24600000/The-Mask-the-mask-24621712-336-475.jpg'\n               },\n               modal: !modal\n          }));\n     };\n\n     const cancelEditMovie = () => {\n          setState((state) => ({\n               ...state,\n               movieToEdit: null,\n               modal: !modal\n          }));\n     };\n\n     const updateMovieToEditOnChange = (field, value) => {\n          let movie = movieToEdit;\n          movie[field] = value;\n          return setState((state) => ({\n               ...state,\n               movieToEdit: movie\n          }));\n     };\n\n     const onSaveMovie = () => {\n          const movie = movieToEdit;\n          setState((state) => ({\n               ...state,\n               movieToEdit: null,\n               modal: !modal\n          }));\n          saveMovie(movie).then(() => {\n               toastr.success('Movie was saved!');\n               loadData();\n          });\n     };\n\n     const updateMovie = (movie) => {\n          setState((state) => ({\n               ...state,\n               movieToEdit: Object.assign({}, movie),\n               modal: !modal\n          }));\n     };\n\n     const setMovieToDelete = (key) => {\n          setState((state) => ({\n               ...state,\n               movieToDelete: key,\n               confirm: !confirm\n          }));\n     };\n\n     const cancelDeleteMovie = () => {\n          setState((state) => ({\n               ...state,\n               movieToDelete: null,\n               confirm: !confirm\n          }));\n     };\n\n     const onDeleteMovie = () => {\n          deleteMovie(movieToDelete.id).then(() => {\n               toastr.error('Movie was deleted!');\n               setState((state) => ({\n                    ...state,\n                    movieToDelete: null,\n                    confirm: !confirm\n               }));\n               loadData();\n          });\n     };\n\n     return (\n          <AppWrapper>\n               {movies ? (\n                    <>\n                         <div className=\"container\">\n                              <div className=\"row justify-content-between\">\n                                   <SortingBar\n                                        className=\"col-2\"\n                                        sortingMethod={sortingMethod}\n                                        sortBy={sortBy}\n                                   />\n                                   <Paginator\n                                        className=\"col-10\"\n                                        activePage={activePage}\n                                        portionCount={portionCount}\n                                        selectPage={selectPage}\n                                        pages={pages}\n                                        portionNumber={portionNumber}\n                                        setPortionNumber={setPortionNumber}\n                                   />\n                              </div>\n                              <div className=\"row justify-content-between\">\n                                   <SearchBar\n                                        className=\"col-6\"\n                                        search={search}\n                                        clearSearch={clearSearch}\n                                   />\n                                   <FilterBar\n                                        className=\"col-4\"\n                                        genres={genres}\n                                        filterMethod={filterMethod}\n                                        filterBy={filterBy}\n                                   />\n                                   <PlusButton\n                                        className=\"col-2\"\n                                        color=\"success\"\n                                        onClickMethod={createNewMovie}\n                                        title=\"+\"\n                                   />\n                              </div>\n                         </div>\n                         {movies.length !== 0 ? (\n                              <MovieList className=\"container\">\n                                   {movies.map((m) => (\n                                        <Movie\n                                             key={m.id}\n                                             movie={m}\n                                             updateMovie={updateMovie}\n                                             setMovieToDelete={setMovieToDelete}\n                                        />\n                                   ))}\n                              </MovieList>\n                         ) : (\n                              <NoMovie />\n                         )}\n                         <MovieModal\n                              modal={modal}\n                              movie={movieToEdit}\n                              cancelEditMovie={cancelEditMovie}\n                              onChangeMovie={updateMovieToEditOnChange}\n                              saveMovie={onSaveMovie}\n                              genres={genres}\n                         />\n                         <Confirm\n                              confirm={confirm}\n                              cancelDeleteMovie={cancelDeleteMovie}\n                              deleteMovie={onDeleteMovie}\n                              movie={movieToDelete}\n                         />\n                    </>\n               ) : (\n                    <NoMovie />\n               )}\n          </AppWrapper>\n     );\n};\n\nexport default App;\n",["62","63"],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/Movie.js",["64","65"],"import React from 'react';\nimport styled from 'styled-components';\nimport { EditButton, DeleteButton } from './common/Buttons';\nimport noMovie from '../assets/no-movie.png';\n\nconst MovieRow = styled.div`\n     font-size: 15px;\n     border-bottom: 1px dotted #cacaca;\n     clear: both;\n     margin: 10px 0;\n`;\nconst MovieImage = styled.div`\n     float: left;\n     position: relative;\n     margin: 0 10px 0 0;\n     background-color: #eee;\n     border: 1px solid rgba(0, 0, 0, 0.1);\n     img {\n          width: 96px;\n          height: 142px;\n     }\n`;\nconst MovieInfo = styled.div`\n     font-size: 12px;\n     text-align: left;\n     font-family: Verdana, Arial, sans-serif;\n     color: #333;\n     p span::before {\n          content: ' | ';\n          color: #ddd;\n     }\n`;\nconst MovieTitle = styled.h3`\n     font-size: 17px;\n     margin: 10px 0 0 0;\n     color: #337ab7;\n     a {\n          cursor: pointer;\n     }\n`;\nconst MovieDetails = styled.p``;\nconst MovieActors = styled.p`\n     margin-top: 8px;\n     color: #337ab7;\n`;\nconst MoviePlot = styled.p`\n     position: relative;\n     line-height: 1.4em;\n     min-height: 3.2em;\n     text-align: justify;\n     font-size: 14px;\n`;\n\nconst Movie = ({ movie, updateMovie, setMovieToDelete }) => {\n     const imgUrl = movie.posterUrl ? movie.posterUrl : noMovie;\n     return (\n          <MovieRow key={movie.id}>\n               <MovieImage>\n                    <img src={imgUrl} title={movie.title} />\n               </MovieImage>\n               <MovieInfo>\n                    <MovieTitle className=\"row justify-content-around\">\n                         <div className=\"col-10\">\n                              <a onClick={() => updateMovie(movie)}>\n                                   {movie.title}\n                              </a>\n                         </div>\n                         <div className=\"col-2\">\n                              <EditButton\n                                   onClickMethod={() => updateMovie(movie)}\n                              />\n                              <DeleteButton\n                                   onClickMethod={() => setMovieToDelete(movie)}\n                              />\n                         </div>\n                    </MovieTitle>\n                    <MovieDetails>\n                         {movie.year}\n                         <span>{movie.runtime + ' min.'}</span>\n                         <span>{movie.genres.join(', ')}</span>\n                    </MovieDetails>\n                    <MovieActors>\n                         {movie.director}\n                         <span>{movie.actors}</span>\n                    </MovieActors>\n                    <MoviePlot>{movie.plot}</MoviePlot>\n               </MovieInfo>\n          </MovieRow>\n     );\n};\n\nexport default Movie;\n","/Users/stellar/Documents/BITBUCKET/my-movie-list/src/services/movieServiceStubs.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/NoMovie.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/Buttons.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/DropDown.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/bars/SortingBar.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/bars/FilterBar.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/bars/SearchBar.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/bars/Paginator.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/MovieModal.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/Inputs.js",[],"/Users/stellar/Documents/BITBUCKET/my-movie-list/src/components/common/Confirm.js",[],{"ruleId":"66","severity":1,"message":"67","line":71,"column":9,"nodeType":"68","endLine":71,"endColumn":76,"suggestions":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":59,"column":21,"nodeType":"76","endLine":59,"endColumn":61},{"ruleId":"77","severity":1,"message":"78","line":64,"column":31,"nodeType":"76","endLine":64,"endColumn":69},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"desc":"82","fix":"83"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [sortingMethod, filterMethod, searchStr, activePage, portionNumber, loadData]",{"range":"84","text":"85"},[1736,1803],"[sortingMethod, filterMethod, searchStr, activePage, portionNumber, loadData]"]